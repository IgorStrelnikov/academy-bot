import logging
import os

from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.types import Message
from aiogram.utils.markdown import hbold
from aiogram.filters import CommandStart

import gspread
from oauth2client.service_account import ServiceAccountCredentials

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
GOOGLE_SHEET_NAME = os.getenv("SPREADSHEET_NAME", "AcademyBotLeads")
CHANNEL_ID = os.getenv("CHANNEL_ID")  # –ü—Ä–∏–º–µ—Ä: -1001234567890

# Telegram bot
bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
credentials = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
gc = gspread.authorize(credentials)
sheet = gc.open(GOOGLE_SHEET_NAME).sheet1

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
WELCOME_TEXT = (
    "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª –ê–∫–∞–¥–µ–º–∏–∏ ¬´–ë–µ–Ω–µ—Ñ–∞–∫—Ç–æ—Ä¬ª –ò–≥–æ—Ä—è –°—Ç—Ä–µ–ª—å–Ω–∏–∫–æ–≤–∞ –∏ –ú–∞–∫—Å–∏–º–∞ –ö—É—á–µ—Ä–æ–≤–∞!\n\n"
    "–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ:\n"
    "‚Ä¢ –ò–∑—É—á–∏—Ç—å –≤–≤–æ–¥–Ω—ã–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —É—Ä–æ–∫–∏\n"
    "‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ê–∫–∞–¥–µ–º–∏–∏\n"
    "‚Ä¢ –ü—Ä–æ–π—Ç–∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–µ—Å—Å–∏–∏ —Å —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ –ê–∫–∞–¥–µ–º–∏–∏ (–≤ —Å—Ç–∞–¥–∏–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)\n"
    "‚Ä¢ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –æ–±—É—á–µ–Ω–∏—é –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –≥—Ä—É–ø–ø–µ\n"
    "‚Ä¢ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –≤–∏–¥–µ–æ–≤—Å—Ç—Ä–µ—á–∞—Ö –∏ –æ–±—â–∞—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏\n"
    "‚Ä¢ –°–ø–æ–∫–æ–π–Ω–æ –ø–æ–Ω—è—Ç—å, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –≤–∞–º –Ω–∞—à–µ –æ–±—É—á–µ–Ω–∏–µ\n\n"
    "‚úçÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –æ—Ç–≤–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª–æ–≤:\n"
    "–∫–∞–∫—É—é –ø–æ–ª—å–∑—É –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ–ª—É—á–∏—Ç—å –∏ –∫–∞–∫–∏–µ –±–æ–ª–∏ –∏–ª–∏ –∑–∞–¥–∞—á–∏ —Å—Ç—Ä–µ–º–∏—Ç–µ—Å—å —Ä–µ—à–∏—Ç—å —Å –Ω–∞—à–µ–π –ø–æ–º–æ—â—å—é."
)

@dp.message(CommandStart())
async def handle_start(message: Message):
    await message.answer(WELCOME_TEXT)

@dp.message(F.text)
async def handle_response(message: Message):
    user = message.from_user
    user_data = [
        user.full_name,
        user.username or "",
        str(user.id),
        message.text
    ]
    sheet.append_row(user_data)
    await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã –¥–æ–±–∞–≤–ª—è–µ–º –≤–∞—Å –≤ –∫–∞–Ω–∞–ª...")

    if CHANNEL_ID:
        try:
            await bot.send_message(CHANNEL_ID, f"‚ûï –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫: {hbold(user.full_name)} (@{user.username or '–±–µ–∑ username'})")
            await bot.send_message(message.chat.id, "üéâ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É.")
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–∞–Ω–∞–ª: {e}")
            await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∫–∞–Ω–∞–ª.")
    else:
        await message.answer("‚ö†Ô∏è –ö–∞–Ω–∞–ª –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á—ë–Ω. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π.")

if __name__ == "__main__":
    import asyncio
    asyncio.run(dp.start_polling(bot))
